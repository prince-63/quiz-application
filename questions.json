[
  {
    "language": "java",
    "difficulty": "easy",
    "questionName": "What is Java?",
    "option1": "A programming language",
    "option2": "A coffee brand",
    "option3": "An operating system",
    "option4": "A type of car",
    "questionSolution": "Java is a programming language.",
    "timeTaken": "10 minutes"
  },
  {
    "language": "java",
    "difficulty": "easy",
    "questionName": "Explain the concept of 'Hello World' in Java.",
    "option1": "Printing the first line of a novel",
    "option2": "A popular greeting in Java culture",
    "option3": "The first program beginners often write",
    "option4": "A Java coding convention",
    "questionSolution": "\"Hello World\" is a simple program often used for introductory purposes.",
    "timeTaken": "8 minutes"
  },
  {
    "language": "java",
    "difficulty": "easy",
    "questionName": "What is the main function in Java?",
    "option1": "main()",
    "option2": "start()",
    "option3": "begin()",
    "option4": "execute()",
    "questionSolution": "The main function in Java is named main().",
    "timeTaken": "5 minutes"
  },
  {
    "language": "java",
    "difficulty": "easy",
    "questionName": "How do you declare a variable in Java?",
    "option1": "var x;",
    "option2": "x = 5;",
    "option3": "int x;",
    "option4": "variable x;",
    "questionSolution": "In Java, you declare a variable using int x;.",
    "timeTaken": "7 minutes"
  },
  {
    "language": "java",
    "difficulty": "easy",
    "questionName": "What is the purpose of the 'public' keyword in Java?",
    "option1": "Makes a variable public",
    "option2": "Defines the main method",
    "option3": "Specifies the class is accessible outside its package",
    "option4": "Indicates a public event",
    "questionSolution": "'public' in Java specifies the class is accessible outside its package.",
    "timeTaken": "6 minutes"
  },
  {
    "language": "java",
    "difficulty": "medium",
    "questionName": "Explain the concept of encapsulation in Java.",
    "option1": "Protecting data by restricting access to internal details",
    "option2": "Wrapping gifts in Java packages",
    "option3": "Creating a class hierarchy",
    "option4": "Connecting Java classes",
    "questionSolution": "Encapsulation in Java involves protecting data by restricting access to internal details.",
    "timeTaken": "12 minutes"
  },
  {
    "language": "java",
    "difficulty": "medium",
    "questionName": "What is the difference between '==' and '.equals()' in Java?",
    "option1": "No difference",
    "option2": "'==' compares object references, while '.equals()' compares content",
    "option3": "'.equals()' is for primitive types, '==' is for objects",
    "option4": "'==' is for Strings, '.equals()' is for integers",
    "questionSolution": "'==' compares object references, while '.equals()' compares content in Java.",
    "timeTaken": "10 minutes"
  },
  {
    "language": "java",
    "difficulty": "medium",
    "questionName": "What is a constructor in Java?",
    "option1": "A method used for constructing buildings",
    "option2": "A special method to initialize objects",
    "option3": "A class variable",
    "option4": "A reserved keyword for memory allocation",
    "questionSolution": "A constructor in Java is a special method used to initialize objects.",
    "timeTaken": "9 minutes"
  },
  {
    "language": "java",
    "difficulty": "medium",
    "questionName": "Explain the 'this' keyword in Java.",
    "option1": "Refers to the current instance of the class",
    "option2": "Indicates the end of a method",
    "option3": "Specifies a loop in Java",
    "option4": "A reserved word for method chaining",
    "questionSolution": "'this' in Java refers to the current instance of the class.",
    "timeTaken": "11 minutes"
  },
  {
    "language": "java",
    "difficulty": "medium",
    "questionName": "What is method overloading in Java?",
    "option1": "A way to overload the system with too many methods",
    "option2": "Defining multiple methods in a class with the same name but different parameters",
    "option3": "A method for loading external libraries",
    "option4": "A mechanism to prevent method duplication",
    "questionSolution": "Method overloading in Java is defining multiple methods in a class with the same name but different parameters.",
    "timeTaken": "10 minutes"
  },
  {
    "language": "java",
    "difficulty": "hard",
    "questionName": "Explain the concept of multithreading in Java.",
    "option1": "Running multiple programs simultaneously",
    "option2": "Executing multiple threads in a single program",
    "option3": "Running multiple Java applications concurrently",
    "option4": "Creating multiple instances of a class",
    "questionSolution": "Multithreading in Java is executing multiple threads in a single program.",
    "timeTaken": "15 minutes"
  },
  {
    "language": "java",
    "difficulty": "hard",
    "questionName": "What is the purpose of the 'super' keyword in Java?",
    "option1": "Indicates a superclass in inheritance",
    "option2": "Used to call a superclass method",
    "option3": "Refers to a superior class",
    "option4": "A reserved word for class hierarchy",
    "questionSolution": "'super' in Java indicates a superclass in inheritance and is used to call a superclass method.",
    "timeTaken": "13 minutes"
  },
  {
    "language": "java",
    "difficulty": "hard",
    "questionName": "Explain the 'final' keyword in Java.",
    "option1": "Specifies the end of a program",
    "option2": "Indicates a method cannot be overridden",
    "option3": "Refers to a constant value",
    "option4": "Marks the last line of code in a class",
    "questionSolution": "'final' in Java indicates a method cannot be overridden and refers to a constant value.",
    "timeTaken": "12 minutes"
  },
  {
    "language": "java",
    "difficulty": "hard",
    "questionName": "What is exception handling in Java?",
    "option1": "A mechanism to handle unexpected situations",
    "option2": "A way to create custom exceptions",
    "option3": "A process of throwing exceptions intentionally",
    "option4": "A feature to avoid runtime errors",
    "questionSolution": "Exception handling in Java is a mechanism to handle unexpected situations and avoid runtime errors.",
    "timeTaken": "14 minutes"
  },
  {
    "language": "java",
    "difficulty": "hard",
    "questionName": "Explain the concept of polymorphism in Java.",
    "option1": "A way to manipulate images",
    "option2": "Executing multiple methods at the same time",
    "option3": "A feature that allows objects of different classes to be treated as objects of a common type",
    "option4": "A method for changing data types",
    "questionSolution": "Polymorphism in Java is a feature that allows objects of different classes to be treated as objects of a common type.",
    "timeTaken": "16 minutes"
  },
  {
    "language": "java",
    "difficulty": "easy",
    "questionName": "What is a Java package?",
    "option1": "A collection of coffee beans",
    "option2": "A group of related classes and interfaces",
    "option3": "A box for Java applications",
    "option4": "A reserved space for Java variables",
    "questionSolution": "A Java package is a group of related classes and interfaces.",
    "timeTaken": "8 minutes"
  },
  {
    "language": "java",
    "difficulty": "easy",
    "questionName": "How do you create an object in Java?",
    "option1": "object x = new Object();",
    "option2": "Object x = createObject();",
    "option3": "new Object x = createObject();",
    "option4": "Object x = Object.create();",
    "questionSolution": "To create an object in Java, you use the syntax: object x = new Object();.",
    "timeTaken": "7 minutes"
  },
  {
    "language": "java",
    "difficulty": "easy",
    "questionName": "What is the purpose of the 'static' keyword in Java?",
    "option1": "Specifies a stationary object",
    "option2": "Indicates a static method that belongs to the class rather than an instance",
    "option3": "Refers to a non-moving variable",
    "option4": "Marks a constant value",
    "questionSolution": "'static' in Java indicates a static method that belongs to the class rather than an instance.",
    "timeTaken": "6 minutes"
  },
  {
    "language": "java",
    "difficulty": "easy",
    "questionName": "What is a Java interface?",
    "option1": "A graphical user interface in Java",
    "option2": "A way to interact with Java applications",
    "option3": "A collection of classes in Java",
    "option4": "A contract for implementing classes",
    "questionSolution": "A Java interface is a contract for implementing classes.",
    "timeTaken": "9 minutes"
  },
  {
    "language": "java",
    "difficulty": "medium",
    "questionName": "Explain the concept of abstraction in Java.",
    "option1": "Hiding complex implementation details and showing only essential features",
    "option2": "Creating abstract art using Java graphics",
    "option3": "A way to reduce Java code size",
    "option4": "Ignoring Java exceptions",
    "questionSolution": "Abstraction in Java involves hiding complex implementation details and showing only essential features.",
    "timeTaken": "11 minutes"
  },
  {
    "language": "java",
    "difficulty": "medium",
    "questionName": "What is the 'null' keyword in Java?",
    "option1": "A reserved word for empty variables",
    "option2": "A value that represents the absence of a reference",
    "option3": "A placeholder for undefined methods",
    "option4": "A keyword for removing objects in Java",
    "questionSolution": "The 'null' keyword in Java is a value that represents the absence of a reference.",
    "timeTaken": "10 minutes"
  },
  {
    "language": "java",
    "difficulty": "medium",
    "questionName": "What is a Java thread?",
    "option1": "A string of Java code",
    "option2": "A unit of execution within a Java program",
    "option3": "A type of Java class",
    "option4": "A line of text output in Java",
    "questionSolution": "A Java thread is a unit of execution within a Java program.",
    "timeTaken": "12 minutes"
  },
  {
    "language": "java",
    "difficulty": "medium",
    "questionName": "How do you handle exceptions in Java?",
    "option1": "Ignoring them and hoping for the best",
    "option2": "Using try, catch, and finally blocks",
    "option3": "Deleting the code causing exceptions",
    "option4": "Avoiding Java exceptions altogether",
    "questionSolution": "In Java, exceptions are handled using try, catch, and finally blocks.",
    "timeTaken": "13 minutes"
  },
  {
    "language": "java",
    "difficulty": "hard",
    "questionName": "What is the Java Virtual Machine (JVM)?",
    "option1": "A machine for brewing Java coffee",
    "option2": "A virtual reality device for Java developers",
    "option3": "A runtime environment for executing Java bytecode",
    "option4": "A device for visualizing Java code",
    "questionSolution": "The Java Virtual Machine (JVM) is a runtime environment for executing Java bytecode.",
    "timeTaken": "15 minutes"
  },
  {
    "language": "java",
    "difficulty": "hard",
    "questionName": "Explain the concept of garbage collection in Java.",
    "option1": "Throwing away unused Java code",
    "option2": "A process of automatic memory management",
    "option3": "Cleaning up the Java workspace",
    "option4": "A feature for recycling Java variables",
    "questionSolution": "Garbage collection in Java is a process of automatic memory management.",
    "timeTaken": "14 minutes"
  },
  {
    "language": "java",
    "difficulty": "hard",
    "questionName": "What is the purpose of the 'transient' keyword in Java?",
    "option1": "Indicates a transient variable",
    "option2": "Specifies a temporary Java class",
    "option3": "Marks a variable as not to be serialized",
    "option4": "A reserved word for data transfer in Java",
    "questionSolution": "'transient' in Java marks a variable as not to be serialized.",
    "timeTaken": "16 minutes"
  },
  {
    "language": "java",
    "difficulty": "hard",
    "questionName": "Explain the concept of multithreading in Java.",
    "option1": "Running multiple programs simultaneously",
    "option2": "Executing multiple threads in a single program",
    "option3": "Running multiple Java applications concurrently",
    "option4": "Creating multiple instances of a class",
    "questionSolution": "Multithreading in Java is executing multiple threads in a single program.",
    "timeTaken": "15 minutes"
  },
  {
    "language": "java",
    "difficulty": "hard",
    "questionName": "What is the purpose of the 'super' keyword in Java?",
    "option1": "Indicates a superclass in inheritance",
    "option2": "Used to call a superclass method",
    "option3": "Refers to a superior class",
    "option4": "A reserved word for class hierarchy",
    "questionSolution": "'super' in Java indicates a superclass in inheritance and is used to call a superclass method.",
    "timeTaken": "13 minutes"
  },
  {
    "language": "java",
    "difficulty": "hard",
    "questionName": "Explain the 'final' keyword in Java.",
    "option1": "Specifies the end of a program",
    "option2": "Indicates a method cannot be overridden",
    "option3": "Refers to a constant value",
    "option4": "Marks the last line of code in a class",
    "questionSolution": "'final' in Java indicates a method cannot be overridden and refers to a constant value.",
    "timeTaken": "12 minutes"
  },
  {
    "language": "java",
    "difficulty": "hard",
    "questionName": "What is exception handling in Java?",
    "option1": "A mechanism to handle unexpected situations",
    "option2": "A way to create custom exceptions",
    "option3": "A process of throwing exceptions intentionally",
    "option4": "A feature to avoid runtime errors",
    "questionSolution": "Exception handling in Java is a mechanism to handle unexpected situations and avoid runtime errors.",
    "timeTaken": "14 minutes"
  },
  {
    "language": "java",
    "difficulty": "hard",
    "questionName": "Explain the concept of polymorphism in Java.",
    "option1": "A way to manipulate images",
    "option2": "Executing multiple methods at the same time",
    "option3": "A feature that allows objects of different classes to be treated as objects of a common type",
    "option4": "A method for changing data types",
    "questionSolution": "Polymorphism in Java is a feature that allows objects of different classes to be treated as objects of a common type.",
    "timeTaken": "16 minutes"
  },
  {
    "language": "java",
    "difficulty": "easy",
    "questionName": "What is a Java package?",
    "option1": "A collection of coffee beans",
    "option2": "A group of related classes and interfaces",
    "option3": "A box for Java applications",
    "option4": "A reserved space for Java variables",
    "questionSolution": "A Java package is a group of related classes and interfaces.",
    "timeTaken": "8 minutes"
  },
  {
    "language": "java",
    "difficulty": "easy",
    "questionName": "How do you create an object in Java?",
    "option1": "object x = new Object();",
    "option2": "Object x = createObject();",
    "option3": "new Object x = createObject();",
    "option4": "Object x = Object.create();",
    "questionSolution": "To create an object in Java, you use the syntax: object x = new Object();.",
    "timeTaken": "7 minutes"
  },
  {
    "language": "java",
    "difficulty": "easy",
    "questionName": "What is the purpose of the 'static' keyword in Java?",
    "option1": "Specifies a stationary object",
    "option2": "Indicates a static method that belongs to the class rather than an instance",
    "option3": "Refers to a non-moving variable",
    "option4": "Marks a constant value",
    "questionSolution": "'static' in Java indicates a static method that belongs to the class rather than an instance.",
    "timeTaken": "6 minutes"
  },
  {
    "language": "java",
    "difficulty": "easy",
    "questionName": "What is a Java interface?",
    "option1": "A graphical user interface in Java",
    "option2": "A way to interact with Java applications",
    "option3": "A collection of classes in Java",
    "option4": "A contract for implementing classes",
    "questionSolution": "A Java interface is a contract for implementing classes.",
    "timeTaken": "9 minutes"
  },
  {
    "language": "java",
    "difficulty": "medium",
    "questionName": "Explain the concept of abstraction in Java.",
    "option1": "Hiding complex implementation details and showing only essential features",
    "option2": "Creating abstract art using Java graphics",
    "option3": "A way to reduce Java code size",
    "option4": "Ignoring Java exceptions",
    "questionSolution": "Abstraction in Java involves hiding complex implementation details and showing only essential features.",
    "timeTaken": "11 minutes"
  },
  {
    "language": "java",
    "difficulty": "medium",
    "questionName": "What is the 'null' keyword in Java?",
    "option1": "A reserved word for empty variables",
    "option2": "A value that represents the absence of a reference",
    "option3": "A placeholder for undefined methods",
    "option4": "A keyword for removing objects in Java",
    "questionSolution": "The 'null' keyword in Java is a value that represents the absence of a reference.",
    "timeTaken": "10 minutes"
  },
  {
    "language": "java",
    "difficulty": "medium",
    "questionName": "What is a Java thread?",
    "option1": "A string of Java code",
    "option2": "A unit of execution within a Java program",
    "option3": "A type of Java class",
    "option4": "A line of text output in Java",
    "questionSolution": "A Java thread is a unit of execution within a Java program.",
    "timeTaken": "12 minutes"
  },
  {
    "language": "java",
    "difficulty": "medium",
    "questionName": "How do you handle exceptions in Java?",
    "option1": "Ignoring them and hoping for the best",
    "option2": "Using try, catch, and finally blocks",
    "option3": "Deleting the code causing exceptions",
    "option4": "Avoiding Java exceptions altogether",
    "questionSolution": "In Java, exceptions are handled using try, catch, and finally blocks.",
    "timeTaken": "13 minutes"
  },
  {
    "language": "java",
    "difficulty": "hard",
    "questionName": "What is the Java Virtual Machine (JVM)?",
    "option1": "A machine for brewing Java coffee",
    "option2": "A virtual reality device for Java developers",
    "option3": "A runtime environment for executing Java bytecode",
    "option4": "A device for visualizing Java code",
    "questionSolution": "The Java Virtual Machine (JVM) is a runtime environment for executing Java bytecode.",
    "timeTaken": "15 minutes"
  },
  {
    "language": "java",
    "difficulty": "hard",
    "questionName": "Explain the concept of garbage collection in Java.",
    "option1": "Throwing away unused Java code",
    "option2": "A process of automatic memory management",
    "option3": "Cleaning up the Java workspace",
    "option4": "A feature for recycling Java variables",
    "questionSolution": "Garbage collection in Java is a process of automatic memory management.",
    "timeTaken": "14 minutes"
  },
  {
    "language": "java",
    "difficulty": "hard",
    "questionName": "What is the purpose of the 'transient' keyword in Java?",
    "option1": "Indicates a transient variable",
    "option2": "Specifies a temporary Java class",
    "option3": "Marks a variable as not to be serialized",
    "option4": "A reserved word for data transfer in Java",
    "questionSolution": "'transient' in Java marks a variable as not to be serialized.",
    "timeTaken": "16 minutes"
  },
  {
    "language": "Any",
    "difficulty": "easy",
    "questionName": "What is Object-Oriented Programming (OOP)?",
    "option1": "A programming language",
    "option2": "A paradigm for organizing and designing code",
    "option3": "A way to write simple scripts",
    "option4": "An operating system",
    "questionSolution": "Object-Oriented Programming (OOP) is a paradigm for organizing and designing code.",
    "timeTaken": "10 minutes"
  },
  {
    "language": "Any",
    "difficulty": "easy",
    "questionName": "What are the four main principles of OOP?",
    "option1": "Inheritance, Encapsulation, Abstraction, Polymorphism",
    "option2": "Variables, Loops, Functions, Arrays",
    "option3": "Objects, Methods, Classes, Interfaces",
    "option4": "Private, Public, Protected, Static",
    "questionSolution": "The four main principles of OOP are Inheritance, Encapsulation, Abstraction, and Polymorphism.",
    "timeTaken": "8 minutes"
  },
  {
    "language": "Any",
    "difficulty": "easy",
    "questionName": "Explain the concept of 'Class' in OOP.",
    "option1": "A blueprint for creating objects",
    "option2": "A function in JavaScript",
    "option3": "A conditional statement",
    "option4": "A mathematical equation",
    "questionSolution": "In OOP, a 'Class' is a blueprint for creating objects.",
    "timeTaken": "6 minutes"
  },
  {
    "language": "Any",
    "difficulty": "easy",
    "questionName": "What is 'Inheritance' in OOP?",
    "option1": "The process of creating a new class from an existing class",
    "option2": "A method calling another method",
    "option3": "A type of loop",
    "option4": "A way to declare variables",
    "questionSolution": "'Inheritance' in OOP is the process of creating a new class from an existing class.",
    "timeTaken": "7 minutes"
  },
  {
    "language": "Any",
    "difficulty": "easy",
    "questionName": "Define 'Encapsulation' in OOP.",
    "option1": "Hiding the implementation details and restricting access to the object's state",
    "option2": "Creating a collection of variables",
    "option3": "Executing multiple methods simultaneously",
    "option4": "A way to write efficient code",
    "questionSolution": "'Encapsulation' in OOP is hiding the implementation details and restricting access to the object's state.",
    "timeTaken": "6 minutes"
  },
  {
    "language": "Any",
    "difficulty": "medium",
    "questionName": "Explain 'Polymorphism' in OOP.",
    "option1": "A way to manipulate images",
    "option2": "Executing multiple methods at the same time",
    "option3": "A feature that allows objects of different classes to be treated as objects of a common type",
    "option4": "A method for changing data types",
    "questionSolution": "'Polymorphism' in OOP is a feature that allows objects of different classes to be treated as objects of a common type.",
    "timeTaken": "10 minutes"
  },
  {
    "language": "Any",
    "difficulty": "medium",
    "questionName": "What is 'Abstraction' in OOP?",
    "option1": "Ignoring certain details and showing only essential features of an object",
    "option2": "A method for reducing code size",
    "option3": "A way to write generic functions",
    "option4": "A process of defining variables",
    "questionSolution": "'Abstraction' in OOP is ignoring certain details and showing only essential features of an object.",
    "timeTaken": "9 minutes"
  },
  {
    "language": "Any",
    "difficulty": "medium",
    "questionName": "How does 'Encapsulation' contribute to data security in OOP?",
    "option1": "By encrypting data",
    "option2": "By restricting access to the object's state and preventing unauthorized modifications",
    "option3": "By using secure sockets layer (SSL)",
    "option4": "By implementing firewalls",
    "questionSolution": "'Encapsulation' in OOP contributes to data security by restricting access to the object's state and preventing unauthorized modifications.",
    "timeTaken": "12 minutes"
  },
  {
    "language": "Any",
    "difficulty": "medium",
    "questionName": "Explain the difference between 'Abstract Class' and 'Interface' in OOP.",
    "option1": "No difference, they are interchangeable",
    "option2": "'Abstract Class' allows multiple inheritances, 'Interface' doesn't",
    "option3": "'Abstract Class' cannot have abstract methods, 'Interface' can",
    "option4": "'Interface' allows multiple inheritances, 'Abstract Class' doesn't",
    "questionSolution": "The main difference is that 'Abstract Class' allows multiple inheritances, while 'Interface' doesn't.",
    "timeTaken": "11 minutes"
  },
  {
    "language": "Any",
    "difficulty": "medium",
    "questionName": "What is the purpose of 'Constructor' in OOP?",
    "option1": "To destroy objects",
    "option2": "To initialize the state of an object",
    "option3": "To create abstract classes",
    "option4": "To handle exceptions",
    "questionSolution": "The purpose of a 'Constructor' in OOP is to initialize the state of an object.",
    "timeTaken": "10 minutes"
  },
  {
    "language": "Any",
    "difficulty": "hard",
    "questionName": "Explain the concept of 'Composition' in OOP.",
    "option1": "A method for composing music",
    "option2": "A way to create new classes by combining existing classes",
    "option3": "A process of joining two objects into one",
    "option4": "A method for writing complex algorithms",
    "questionSolution": "'Composition' in OOP is a way to create new classes by combining existing classes.",
    "timeTaken": "15 minutes"
  },
  {
    "language": "Any",
    "difficulty": "hard",
    "questionName": "What is the significance of 'Destructors' in OOP?",
    "option1": "To destroy objects",
    "option2": "To initialize objects",
    "option3": "To create objects",
    "option4": "To handle errors",
    "questionSolution": "'Destructors' in OOP are used to destroy objects.",
    "timeTaken": "13 minutes"
  },
  {
    "language": "Any",
    "difficulty": "hard",
    "questionName": "How does 'Polymorphism' enhance code flexibility in OOP?",
    "option1": "By adding more variables",
    "option2": "By reducing code size",
    "option3": "By allowing the same code to work with different types of objects",
    "option4": "By removing functions",
    "questionSolution": "'Polymorphism' enhances code flexibility in OOP by allowing the same code to work with different types of objects.",
    "timeTaken": "14 minutes"
  },
  {
    "language": "Any",
    "difficulty": "hard",
    "questionName": "What is the role of 'Interfaces' in achieving multiple inheritances in OOP?",
    "option1": "To create abstract classes",
    "option2": "To implement multiple inheritance",
    "option3": "To prevent multiple inheritances",
    "option4": "To define variables",
    "questionSolution": "'Interfaces' in OOP play a role in achieving multiple inheritances.",
    "timeTaken": "16 minutes"
  }
]